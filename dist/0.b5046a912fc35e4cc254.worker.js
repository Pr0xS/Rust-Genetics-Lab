!function(e){var t={};function s(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)s.d(n,i,(function(t){return e[t]}).bind(null,i));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s="guBT")}({guBT:function(e,t,s){"use strict";s.r(t);const n={G:.6,Y:.6,H:.6,W:1,X:1};class i{constructor(e,t,s,n,i,r){this.genesWeight=i,this.parents=e,this.genes=t,this.probability=Math.round(100*s)/100,this.value=this.speciesAnalyze(t),this.generation=n,this.baseSample=r}speciesAnalyze(e){let t=0;return[...e].forEach(e=>{t+=this.genesWeight[e]}),Math.round(100*t)/100}}function r(e,t){let s="";for(let n=0;n<6;n++)s+=n==t?e:".";return s}addEventListener("message",({data:e})=>{let t;const s=new l(e.settings);s.startNewAnalisys(e.samples),t=s.getSpeciesDB(),postMessage({speciesDB:t})});class l{constructor(e){this.samples=new Set,this.breeding=new a,this.speciesDB={},this.settings=e}getSpeciesDB(){return this.speciesDB}startNewAnalisys(e){this.resetData(),this.samples=new Set(e),"auto"==this.settings.mode?this.startAutoAnalisys(this.settings.auto.minGoodSamples,this.settings.auto.minScoreSample):"manual"==this.settings.mode&&this.startManualAnalisys(this.settings.manual.maxNumCombinations,this.settings.manual.maxNumGenerations)}startAutoAnalisys(e,t){this.startParentsAnalysis();for(let s=1;s<=4;s++){s>1&&this.getNextGenSamples();for(let n=2;n<=5;n++)if(this.startSamplesAnalysis(n),this.reorganizeSpeciesDB(),postMessage({status:{nCombinations:n,nGen:s}}),this.enoughGoodSamples(e,t))return}}startManualAnalisys(e,t){this.startParentsAnalysis();for(let s=1;s<=t;s++){s>1&&this.getNextGenSamples();for(let t=2;t<=e;t++)this.startSamplesAnalysis(t)}this.reorganizeSpeciesDB()}resetData(){this.samples=new Set,this.speciesDB={}}startParentsAnalysis(){this.samples.forEach(e=>{let t=new i([],e,100,0,this.settings.genesWeight,"ANY");this.speciesDB[t.genes]=[t]})}startSamplesAnalysis(e){(function(e,t){switch(t){case 2:return function(e){let t=[];for(let s=0;s<e.length-1;s++)for(let n=s+1;n<e.length;n++){let i=[];i.push(e[s]),i.push(e[n]),t.push(i)}return t}(e);case 3:return function(e){let t=[];for(let s=0;s<e.length-2;s++)for(let n=s+1;n<e.length-1;n++)for(let i=n+1;i<e.length;i++){let r=[];r.push(e[s]),r.push(e[n]),r.push(e[i]),t.push(r)}return t}(e);case 4:return function(e){let t=[];for(let s=0;s<e.length-3;s++)for(let n=s+1;n<e.length-2;n++)for(let i=n+1;i<e.length-1;i++)for(let r=i+1;r<e.length;r++){let l=[];l.push(e[s]),l.push(e[n]),l.push(e[i]),l.push(e[r]),t.push(l)}return t}(e);case 5:return function(e){let t=[];for(let s=0;s<e.length-4;s++)for(let n=s+1;n<e.length-3;n++)for(let i=n+1;i<e.length-2;i++)for(let r=i+1;r<e.length-1;r++)for(let l=r+1;l<e.length;l++){let a=[];a.push(e[s]),a.push(e[n]),a.push(e[i]),a.push(e[r]),a.push(e[l]),t.push(a)}return t}(e);case 6:return function(e){let t=[];for(let s=0;s<e.length-5;s++)for(let n=s+1;n<e.length-4;n++)for(let i=n+1;i<e.length-3;i++)for(let r=i+1;r<e.length-2;r++)for(let l=r+1;l<e.length-1;l++)for(let a=l+1;a<e.length;a++){let h=[];h.push(e[s]),h.push(e[n]),h.push(e[i]),h.push(e[r]),h.push(e[l]),h.push(e[a]),t.push(h)}return t}(e);case 7:return function(e){let t=[];for(let s=0;s<e.length-6;s++)for(let n=s+1;n<e.length-5;n++)for(let i=n+1;i<e.length-4;i++)for(let r=i+1;r<e.length-3;r++)for(let l=r+1;l<e.length-2;l++)for(let a=l+1;a<e.length-1;a++)for(let h=a+1;h<e.length;h++){let o=[];o.push(e[s]),o.push(e[n]),o.push(e[i]),o.push(e[r]),o.push(e[l]),o.push(e[a]),o.push(e[h]),t.push(o)}return t}(e);case 8:return function(e){let t=[];for(let s=0;s<e.length-7;s++)for(let n=s+1;n<e.length-6;n++)for(let i=n+1;i<e.length-5;i++)for(let r=i+1;r<e.length-4;r++)for(let l=r+1;l<e.length-3;l++)for(let a=l+1;a<e.length-2;a++)for(let h=a+1;h<e.length-1;h++)for(let o=h+1;o<e.length;o++){let p=[];p.push(e[s]),p.push(e[n]),p.push(e[i]),p.push(e[r]),p.push(e[l]),p.push(e[a]),p.push(e[h]),p.push(e[o]),t.push(p)}return t}(e)}return[]})(Array.from(this.samples),e).forEach(e>3?e=>{let t;if(t=this.breeding.breedingSimulation(e),t.length){const s=100/t.length;t.forEach(t=>{if(!this.samples.has(t)){let n=new i(e,t,s,this.getSampleGeneration(e,"ANY"),this.settings.genesWeight,"ANY");n.genes in this.speciesDB?this.speciesDB[n.genes].push(n):this.speciesDB[n.genes]=[n]}})}}:e=>{Array.from(this.samples).forEach(t=>{let s=this.breeding.breedingSimulationWithBaseSample(e,t);if(!this.samples.has(s.newGens)&&""!=s.newGens){let t=new i(e,s.newGens,100,this.getSampleGeneration(e,s.base),this.settings.genesWeight,s.base);t.genes in this.speciesDB?this.speciesDB[t.genes].push(t):this.speciesDB[t.genes]=[t]}})})}getNextGenSamples(e=10){let t=new Array(6).fill(0),s=new Array(6).fill(0);this.samples.forEach(e=>{for(let n=0;n<6;n++)"G"==e[n]?t[n]++:"Y"==e[n]&&s[n]++});let n=15,i=0;for(;i<=5&&n;){let e=t.indexOf(Math.min(...t));if(e<2)t[e]+=9999;else{const s=r("G",e);this._addNewNextGenSample(s)?(t[e]++,i++):t[e]+=9999}n--}n=15;let l=0;for(;l<=5&&n;){let e=s.indexOf(Math.min(...s));if(e<2)s[e]+=9999;else{const t=r("Y",e);this._addNewNextGenSample(t)?(s[e]++,l++):s[e]+=9999}n--}}_addNewNextGenSample(e){const t=Object.keys(this.speciesDB);let s=!1;return t.some(t=>-1!=t.search(e)&&!this.samples.has(t)&&(this.samples.add(t),s=!0,!0)),s}reorganizeSpeciesDB(){for(let e in this.speciesDB)this.speciesDB[e]=this.sortSpecies(this.speciesDB[e]).slice(0,10);this.speciesDB=Object.keys(this.speciesDB).sort((e,t)=>this.customSort(this.speciesDB[e][0],this.speciesDB[t][0])).reduce((e,t)=>({...e,[t]:this.speciesDB[t]}),{})}enoughGoodSamples(e,t){let s=Object.keys(this.speciesDB);return!(s.length<=e)&&this.speciesDB[s[e]][0].value>=t}sortSpecies(e){return e.length<2||e.sort(this.customSort.bind(this)),e}customSort(e,t){return t.value-e.value||t.probability-e.probability||e.generation-t.generation||this.compareParentsGensAndProbs(e,t)||e.parents.length-t.parents.length}compareParentsGensAndProbs(e,t){let s=0,n=0,i=0,r=0;for(let l of e.parents)s+=this.speciesDB[l][0].generation,n+=this.speciesDB[l][0].probability;"ANY"!=e.baseSample&&(s+=this.speciesDB[e.baseSample][0].generation,n+=this.speciesDB[e.baseSample][0].probability);for(let l of t.parents)i+=this.speciesDB[l][0].generation,r+=this.speciesDB[l][0].probability;return"ANY"!=t.baseSample&&(i+=this.speciesDB[t.baseSample][0].generation,r+=this.speciesDB[t.baseSample][0].probability),n/=e.parents.length,r/=t.parents.length,r-n||s-i}getSampleGeneration(e,t){let s="ANY"!=t?this.speciesDB[t][0].generation:0;for(let n of e)this.speciesDB[n][0].generation>s&&(s=this.speciesDB[n][0].generation);return s+1}}class a{constructor(e=1){this.maxBadGenes=e}breedingSimulation(e){let t=[],s=[{G:0,Y:0,H:0,X:0,W:0},{G:0,Y:0,H:0,X:0,W:0},{G:0,Y:0,H:0,X:0,W:0},{G:0,Y:0,H:0,X:0,W:0},{G:0,Y:0,H:0,X:0,W:0},{G:0,Y:0,H:0,X:0,W:0}];for(let l of e)for(let e=0;e<6;e++)s[e][l[e]]+=n[l[e]];let i=0,r=[];return s.some(e=>{if(i>this.maxBadGenes)return!0;let t=[],s=0;for(let n in e)e[n]>s?(s=e[n],t=[],t.push(n)):e[n]==s&&t.push(n);return(t.includes("X")||t.includes("W"))&&i++,r.push(t),!1}),i<=this.maxBadGenes&&((...e)=>e.reduce((e,t)=>e.flatMap(e=>t.map(t=>[e,t].flat()))))(...r).forEach(e=>t.push(e.join(""))),t}breedingSimulationWithBaseSample(e,t){let s="",i=[{G:0,Y:0,H:0,X:0,W:0},{G:0,Y:0,H:0,X:0,W:0},{G:0,Y:0,H:0,X:0,W:0},{G:0,Y:0,H:0,X:0,W:0},{G:0,Y:0,H:0,X:0,W:0},{G:0,Y:0,H:0,X:0,W:0}];for(let a of e)for(let e=0;e<6;e++)i[e][a[e]]+=n[a[e]];let r=0,l=!1;return i.some((e,i)=>{if(r>this.maxBadGenes)return!0;let a=n[t[i]],h="";for(let t in e)e[t]>a&&(a=e[t],h=t);return h.length||(l=!0,h=t[i]),"X"!=h&&"W"!=h||r++,s+=h,!1}),r>this.maxBadGenes&&(s=""),{base:l?t:"ANY",newGens:s}}}}});