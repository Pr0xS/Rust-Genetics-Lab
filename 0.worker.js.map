{"version":3,"sources":["webpack/bootstrap","./src/app/helpers.ts","./src/app/genetis.models.ts","./src/app/genetics.worker.ts"],"names":[],"mappings":"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","file":"0.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"gH1F\");\n","// https://stackoverflow.com/questions/12303989/cartesian-product-of-multiple-arrays-in-javascript\n\nexport const cartesian = (...a: any) => a.reduce((a: any, b: any) => a.flatMap((d: any) => b.map((e: any) => [d, e].flat())));\n\nexport function getCustomRegexExpresion(letter: string, position: number): string{\n    let regex = ''\n    for (let i = 0; i < 6; i++) {\n        if (i == position) {\n            regex += letter;\n        } else {\n            regex += \".\";\n        }\n    }\n\n    return regex;\n}\n\nexport function randomGeneticsGenerator(size: number): string[] {\n    const genes: string = \"GYHXW\";\n    let genetics: string[] = [];\n\n    for (let i = 0; i < size; i++) {\n        let gene: string = \"\";\n        while (gene.length < 6) {\n            gene += genes[Math.floor(Math.random() * genes.length)];\n        } \n        genetics.push(gene)\n    }\n\n    return genetics;\n}\n\nexport function getCombinations(values: string[], size: number): string[][] {\n\n    switch (size){\n        case 2: {\n            return combination2(values);\n        }\n        case 3: {\n            return combination3(values);\n        }\n        case 4: {\n            return combination4(values);\n        }\n        case 5: {\n            return combination5(values);\n        }\n        case 6: {\n            return combination6(values);\n        }\n        case 7: {\n            return combination7(values);\n        }\n        case 8: {\n            return combination8(values);\n        }\n    };\n    return []\n}\n\nfunction combination2(values: string[]): string[][] {\n    let result: string[][] = [];\n\n    for (let i = 0; i < values.length - 1; i++) {\n        for (let j = i + 1; j < values.length; j++) {\n            let combination: string[] = []\n            combination.push(values[i]);\n            combination.push(values[j]);\n            result.push(combination);\n        }\n    }\n\n    return result;\n}\n\nfunction combination3(values: string[]): string[][] {\n    let result: string[][] = [];\n\n    for (let i = 0; i < values.length - 2; i++) {\n        for (let j = i + 1; j < values.length - 1; j++) {\n            for (let k = j + 1; k < values.length; k++) {\n                let combination: string[] = []\n                combination.push(values[i]);\n                combination.push(values[j]);\n                combination.push(values[k]);\n                result.push(combination);\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction combination4(values: string[]): string[][] {\n    let result: string[][] = [];\n\n    for (let i = 0; i < values.length - 3; i++) {\n        for (let j = i + 1; j < values.length - 2; j++) {\n            for (let k = j + 1; k < values.length - 1; k++) {\n                for (let l = k + 1; l < values.length; l++) {\n                    let combination: string[] = []\n                    combination.push(values[i]);\n                    combination.push(values[j]);\n                    combination.push(values[k]);\n                    combination.push(values[l]);\n                    result.push(combination);\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction combination5(values: string[]): string[][] {\n    let result: string[][] = [];\n\n    for (let i = 0; i < values.length - 4; i++) {\n        for (let j = i + 1; j < values.length - 3; j++) {\n            for (let k = j + 1; k < values.length - 2; k++) {\n                for (let l = k + 1; l < values.length - 1; l++) {\n                    for (let m = l + 1; m < values.length; m++) {\n                        let combination: string[] = []\n                        combination.push(values[i]);\n                        combination.push(values[j]);\n                        combination.push(values[k]);\n                        combination.push(values[l]);\n                        combination.push(values[m]);\n                        result.push(combination);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction combination6(values: string[]): string[][] {\n    let result: string[][] = [];\n\n    for (let i = 0; i < values.length - 5; i++) {\n        for (let j = i + 1; j < values.length - 4; j++) {\n            for (let k = j + 1; k < values.length - 3; k++) {\n                for (let l = k + 1; l < values.length - 2; l++) {\n                    for (let m = l + 1; m < values.length - 1; m++) {\n                        for (let n = m + 1; n < values.length; n++) {\n                            let combination: string[] = []\n                            combination.push(values[i]);\n                            combination.push(values[j]);\n                            combination.push(values[k]);\n                            combination.push(values[l]);\n                            combination.push(values[m]);\n                            combination.push(values[n]);\n                            result.push(combination);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction combination7(values: string[]): string[][] {\n    let result: string[][] = [];\n\n    for (let i = 0; i < values.length - 6; i++) {\n        for (let j = i + 1; j < values.length - 5; j++) {\n            for (let k = j + 1; k < values.length - 4; k++) {\n                for (let l = k + 1; l < values.length - 3; l++) {\n                    for (let m = l + 1; m < values.length - 2; m++) {\n                        for (let n = m + 1; n < values.length - 1; n++) {\n                            for (let o = n + 1; o < values.length; o++) {\n                                let combination: string[] = []\n                                combination.push(values[i]);\n                                combination.push(values[j]);\n                                combination.push(values[k]);\n                                combination.push(values[l]);\n                                combination.push(values[m]);\n                                combination.push(values[n]);\n                                combination.push(values[o]);\n                                result.push(combination);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction combination8(values: string[]): string[][] {\n    let result: string[][] = [];\n\n    for (let i = 0; i < values.length - 7; i++) {\n        for (let j = i + 1; j < values.length - 6; j++) {\n            for (let k = j + 1; k < values.length - 5; k++) {\n                for (let l = k + 1; l < values.length - 4; l++) {\n                    for (let m = l + 1; m < values.length - 3; m++) {\n                        for (let n = m + 1; n < values.length - 2; n++) {\n                            for (let o = n + 1; o < values.length - 1; o++) {\n                                for (let p = o + 1; p < values.length; p++) {\n                                    let combination: string[] = []\n                                    combination.push(values[i]);\n                                    combination.push(values[j]);\n                                    combination.push(values[k]);\n                                    combination.push(values[l]);\n                                    combination.push(values[m]);\n                                    combination.push(values[n]);\n                                    combination.push(values[o]);\n                                    combination.push(values[p]);\n                                    result.push(combination);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}","export const defaultGenesWeight: Record<string, number> = {\n    \"G\": 1,\n    \"Y\": 1,\n    \"H\": 0.5,\n    \"W\": -0.1,\n    \"X\": -0.1\n}\n\nexport const genesCrossBreedingValues: Record<string, number> = {\n    \"G\": 0.6,\n    \"Y\": 0.6,\n    \"H\": 0.6,\n    \"W\": 1,\n    \"X\": 1\n}\n\nexport class Species {\n    genesWeight: Record<string, number>\n    \n    parents: string[];\n    genes: string;\n    probability: number;\n    value: number;\n    generation: number;\n    baseSample: string;\n\n    constructor(parents: string[], genes: string, probability: number, generation: number, genesWeight:Record<string, number>, baseSample: string) {\n        this.genesWeight = genesWeight\n\n        this.parents = parents;\n        this.genes = genes;\n        this.probability = Math.round(probability * 1e2) / 1e2;\n        this.value = this.speciesAnalyze(genes);\n        this.generation = generation;\n        this.baseSample = baseSample\n\n    }\n\n    speciesAnalyze(genes: string): number {\n        let value = 0;\n        [...genes].forEach(gene => {\n            value += this.genesWeight[gene];\n        });\n        return Math.round(value * 1e2) / 1e2\n    }\n};\n\nexport interface Settings {\n    mode: \"auto\" | \"manual\";\n    auto: {\n        minScoreSample: number;\n        minGoodSamples: number;\n    };\n    manual: {\n        maxNumCombinations: number;\n        maxNumGenerations: number;\n    }\n\n    genesWeight: Record<string, number>\n}\n\nexport const defaultSettings: Settings = {\n        mode: \"auto\",\n        auto: {\n            minScoreSample: 6,\n            minGoodSamples: 4\n        },\n        manual: {\n            maxNumCombinations: 8,\n            maxNumGenerations: 1\n        },\n        genesWeight: {...defaultGenesWeight}\n}","/// <reference lib=\"webworker\" />\n\nimport { Species } from 'src/app/genetis.models'\nimport { cartesian, getCombinations, getCustomRegexExpresion } from 'src/app/helpers'\nimport { genesCrossBreedingValues, defaultGenesWeight } from 'src/app/genetis.models'\nimport { Settings } from 'src/app/genetis.models';\n\n\naddEventListener('message', ({ data }) => {\n    let speciesDB: {[species: string]: Species[]};\n\n    const genetics = new Genetics(data.settings);\n    genetics.startNewAnalisys(data.samples);\n    speciesDB = genetics.getSpeciesDB()\n\n    postMessage({speciesDB: speciesDB});\n});\n\nclass Genetics {\n    settings: Settings;\n    samples: Set<string>;\n    breeding: Breeding\n    speciesDB: {[species: string]: Species[]}\n  \n    constructor(settings: Settings) {\n        this.samples = new Set();\n        this.breeding = new Breeding();\n        this.speciesDB = {};\n        this.settings = settings;\n\n    }\n  \n    getSpeciesDB(): {[species: string]: Species[]} {\n        return this.speciesDB;\n    }\n  \n    startNewAnalisys(samples: string[]) {\n        this.resetData();\n        this.samples = new Set(samples);\n  \n        if (this.settings.mode == \"auto\") {\n            this.startAutoAnalisys(this.settings.auto.minGoodSamples, this.settings.auto.minScoreSample);\n        } else if (this.settings.mode == \"manual\") {\n            this.startManualAnalisys(this.settings.manual.maxNumCombinations, this.settings.manual.maxNumGenerations);\n        }\n\n    }\n  \n    startAutoAnalisys(numGoodSamples: number, minSampleValue: number) {\n        this.startParentsAnalysis();\n  \n        // Combinations of 4 and 5. Generation 1, 2 and 3\n        for (let nGen = 1; nGen <= 4; nGen++) {\n            if (nGen > 1) {\n                this.getNextGenSamples();\n            }\n            for (let nCombinations = 2; nCombinations <= 5; nCombinations++) {\n                this.startSamplesAnalysis(nCombinations);\n                this.reorganizeSpeciesDB();\n                \n                postMessage({status: {nCombinations: nCombinations, nGen: nGen}})\n                if (this.enoughGoodSamples(numGoodSamples, minSampleValue)) {\n                    return\n                }\n            }\n        }\n    }\n\n    startManualAnalisys(maxCombinations: number, maxGeneration: number) {\n        this.startParentsAnalysis();\n  \n        for (let nGen = 1; nGen <= maxGeneration; nGen++) {\n            if (nGen > 1) {\n                this.getNextGenSamples();\n            }\n            for (let nCombinations = 2; nCombinations <= maxCombinations; nCombinations++) {\n                this.startSamplesAnalysis(nCombinations);\n            }\n        }\n        this.reorganizeSpeciesDB();\n    }\n  \n    resetData() {\n        this.samples = new Set();\n        this.speciesDB = {};\n    }\n  \n    startParentsAnalysis() {\n        this.samples.forEach(sample => {\n            let newSample = new Species([], sample, 100, 0, this.settings.genesWeight, \"ANY\");\n            this.speciesDB[newSample.genes] = [newSample]\n        })\n    }\n  \n    startSamplesAnalysis(nCombinations: number) {\n        let combinationGroups: string[][] = getCombinations(Array.from(this.samples), nCombinations);\n\n        if (nCombinations > 3) {\n            combinationGroups.forEach(combination => {\n                let newSpecies: string[]\n                newSpecies = this.breeding.breedingSimulation(combination);\n\n                if(newSpecies.length) {\n                    const probability = 100/newSpecies.length;\n                    newSpecies.forEach(species => {\n                        if (!this.samples.has(species)) {\n                            let newSpecie = new Species(combination, species, probability, this.getSampleGeneration(combination, \"ANY\"), this.settings.genesWeight, \"ANY\");\n                            if (newSpecie.genes in this.speciesDB) {\n                                this.speciesDB[newSpecie.genes].push(newSpecie);\n                            } else {\n                                this.speciesDB[newSpecie.genes] = [newSpecie];\n                            }\n                        }\n                    });\n                }\n            });    \n        } else {\n            combinationGroups.forEach(combination => {\n                Array.from(this.samples).forEach(sample => {\n                    let result = this.breeding.breedingSimulationWithBaseSample(combination, sample)\n                    if (!this.samples.has(result.newGens) && result.newGens != \"\") {\n                        let newSpecie = new Species(combination, result.newGens, 100, this.getSampleGeneration(combination, result.base), this.settings.genesWeight, result.base);\n                        if (newSpecie.genes in this.speciesDB) {\n                            this.speciesDB[newSpecie.genes].push(newSpecie);\n                        } else {\n                            this.speciesDB[newSpecie.genes] = [newSpecie];\n                        }  \n                    }\n                })\n            });\n        }\n  \n    }\n  \n    getNextGenSamples(topBestSamplesToAdd: number = 10) {\n\n        let gArray: number[] = new Array(6).fill(0);\n        let yArray: number[] = new Array(6).fill(0);\n\n        this.samples.forEach(sample => {\n            for (let i = 0; i < 6; i++) {\n                if (sample[i] == \"G\") {\n                    gArray[i]++\n                } else if(sample[i] == \"Y\") {\n                    yArray[i]++;\n                }\n            }\n        })\n\n        let maxTries = 15;\n        let gAdded = 0;\n        while (gAdded <= 5 && maxTries) {\n            let min = gArray.indexOf(Math.min(...gArray));\n            if ( min < 2) {\n                // if there are 0 or just 1 g Its not possible to obtain new samples\n                gArray[min] += 9999;\n            } else {\n                const filter = getCustomRegexExpresion(\"G\", min);\n                if (this._addNewNextGenSample(filter)) {\n                    gArray[min]++;\n                    gAdded++;\n                } else {\n                    // If it wasn't possible to add a new sample, stop trying for this one\n                    gArray[min] += 9999;\n                }\n            }\n\n            maxTries--;\n        }\n\n        maxTries = 15;\n        let yAdded = 0;\n        while (yAdded <= 5 && maxTries) {\n            let min = yArray.indexOf(Math.min(...yArray));\n            if ( min < 2) {\n                // if there are 0 or just 1 g Its not possible to obtain new samples\n                yArray[min] += 9999;\n            } else {\n                const filter = getCustomRegexExpresion(\"Y\", min);\n                if (this._addNewNextGenSample(filter)) {\n                    yArray[min]++;\n                    yAdded++;\n                } else {\n                    // If it wasn't possible to add a new sample, stop trying for this one\n                    yArray[min] += 9999;\n                }\n            }\n\n            maxTries--;\n\n        }\n    }\n\n    _addNewNextGenSample(regex: string) {\n        const allSamples = Object.keys(this.speciesDB);\n        let added = false\n\n        allSamples.some(sample => {\n            if (sample.search(regex) != -1) {\n                if(!this.samples.has(sample)) {\n                    this.samples.add(sample);\n                    added = true\n                    return true;\n                }\n            }\n\n            return false\n        });\n\n        return added;\n    }\n  \n    reorganizeSpeciesDB() {\n        for (let species in this.speciesDB) {\n            this.speciesDB[species] = this.sortSpecies(this.speciesDB[species]).slice(0,10)\n        }\n  \n        // Sorting the object keys https://stackoverflow.com/questions/9658690/is-there-a-way-to-sort-order-keys-in-javascript-objects\n        this.speciesDB = Object.keys(this.speciesDB).sort((a, b) => {\n            let specieA = this.speciesDB[a][0];\n            let specieB = this.speciesDB[b][0];\n            return this.customSort(specieA, specieB)\n  \n        }).reduce((obj, key) => ({\n            ...obj, [key]: this.speciesDB[key]\n        }), {})\n    }\n  \n    enoughGoodSamples(minNumberOfGoodSamples: number ,minScore: number): boolean {\n        let samples = Object.keys(this.speciesDB);\n        if (samples.length <= minNumberOfGoodSamples) {\n            return false;\n        }\n        return this.speciesDB[samples[minNumberOfGoodSamples]][0].value >= minScore;\n    }\n  \n    sortSpecies(species: Species[]): Species[] {\n        if (species.length < 2) {\n            return species;\n        }\n  \n        species.sort(this.customSort.bind(this));\n  \n        return species;\n    }\n  \n    customSort(a: Species,b: Species): number {\n        return b.value - a.value || b.probability - a.probability || a.generation - b.generation || this.compareParentsGensAndProbs(a, b) || a.parents.length - b.parents.length\n        // return b.value - a.value || b.probability - a.probability || a.generation - b.generation || a.parents.length - b.parents.length || this.compareParentsGensAndProbs(a, b) \n    }\n  \n    compareParentsGensAndProbs(a: Species, b: Species): number {\n        let aParentGenValue: number = 0;\n        let aParentProbValue: number = 0;\n        let bParentGenValue: number = 0;\n        let bParentProbValue: number = 0;\n  \n        // A parents\n        for (let parent of a.parents) {\n            aParentGenValue += this.speciesDB[parent][0].generation;\n            aParentProbValue += this.speciesDB[parent][0].probability;\n        }\n\n        // A baseSample if exist\n        if (a.baseSample != \"ANY\") {\n            aParentGenValue += this.speciesDB[a.baseSample][0].generation;\n            aParentProbValue += this.speciesDB[a.baseSample][0].probability;\n        }\n  \n        // B parents\n        for (let parent of b.parents) {\n            bParentGenValue += this.speciesDB[parent][0].generation;\n            bParentProbValue += this.speciesDB[parent][0].probability;\n        }\n\n        // B baseSample if exist\n        if (b.baseSample != \"ANY\") {\n            bParentGenValue += this.speciesDB[b.baseSample][0].generation;\n            bParentProbValue += this.speciesDB[b.baseSample][0].probability;\n        }\n  \n        aParentProbValue /= a.parents.length;\n        bParentProbValue /= b.parents.length;\n  \n        return bParentProbValue - aParentProbValue || aParentGenValue - bParentGenValue;\n    }\n\n    getSampleGeneration(parents: string[], baseSample: string): number {\n        let maxGen = baseSample != \"ANY\" ? this.speciesDB[baseSample][0].generation : 0;\n        for (let parent of parents) {\n            if (this.speciesDB[parent][0].generation > maxGen) {\n                maxGen = this.speciesDB[parent][0].generation;\n            }\n        }\n        return maxGen + 1;\n    }\n    \n};\n  \n  class Breeding {\n    maxBadGenes: number;\n  \n    constructor(maxBadGenes: number = 1) {\n        this.maxBadGenes = maxBadGenes;\n    }\n  \n    breedingSimulation(samples: string[]): string[] {\n        let newSeeds: string[] = [];\n        let childGenes: Array<Record<string, number>> = [\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n        ];\n  \n        for (let sample of samples) {\n            for (let i = 0; i < 6; i++) {\n                childGenes[i][sample[i]] += genesCrossBreedingValues[sample[i]];\n            }\n        }\n        \n        let badGenes = 0;\n        let posibleGenetics: string[][] = [];\n        childGenes.some((gene) => {\n            if (badGenes > this.maxBadGenes) {\n                // \"break\" out of the some function\n                return true;   \n            }\n            let priorityGenes: string[] = [];\n            let maxValue: number = 0;\n  \n            for (let g in gene) {\n                if (gene[g] > maxValue) {\n                    maxValue = gene[g];\n                    priorityGenes = [];\n                    priorityGenes.push(g);\n                } else if (gene[g] == maxValue) {\n                    priorityGenes.push(g);\n                }\n            }\n  \n            if (priorityGenes.includes(\"X\") || priorityGenes.includes(\"W\")) {\n                badGenes++\n            }\n            posibleGenetics.push(priorityGenes);\n            return false;\n        });\n  \n        if(badGenes <= this.maxBadGenes) {\n            const aux: string[][] = cartesian(...posibleGenetics);\n            aux.forEach(genes => newSeeds.push(genes.join(\"\")));\n        }\n        return newSeeds;\n    }\n\n    breedingSimulationWithBaseSample(samples: string[], baseSample: string): {base: string, newGens: string} {\n        let newSeed: string = '';\n        let posibleChildGenes: Array<Record<string, number>> = [\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n            {\"G\": 0, \"Y\": 0, \"H\": 0, \"X\": 0, \"W\": 0},\n        ];\n    \n        for (let sample of samples) {\n            for (let i = 0; i < 6; i++) {\n                posibleChildGenes[i][sample[i]] += genesCrossBreedingValues[sample[i]];\n            }\n        }\n    \n        let badGenes = 0;\n        let baseSampleRequired = false;\n        posibleChildGenes.some((gene, idx) => {\n            if (badGenes > this.maxBadGenes) {\n                // \"break\" out of the some function\n                return true;   \n            }\n    \n            let maxValue: number = genesCrossBreedingValues[baseSample[idx]];\n            let newGene: string = '';\n            for (let g in gene) {\n                if (gene[g] > maxValue) {\n                    maxValue = gene[g];\n                    newGene = g;\n                }\n            }\n    \n            if (!newGene.length) {\n                baseSampleRequired = true;\n                newGene = baseSample[idx];\n            }\n    \n            if (newGene == \"X\" || newGene ==\"W\"){\n                badGenes++;\n            }\n    \n            newSeed += newGene;\n            return false;\n        });\n    \n        if (badGenes > this.maxBadGenes) {\n            newSeed = '';\n        }\n        return { base: baseSampleRequired ? baseSample : \"ANY\", newGens: newSeed }\n    }\n};"],"sourceRoot":"webpack:///"}